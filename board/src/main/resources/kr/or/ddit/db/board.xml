<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<select id="boardListAll" resultType="postsVo">
		select lpad('└▶',(level-1)*3, '　') || po_subject as lp_subject
		, bo_posts.*
		, level
		
		from bo_posts
		
		start with po_id2 is null
		
		connect by prior po_id = po_id2
		
		order siblings by po_reply desc
	</select>
	
	
	
	<!-- 메뉴  생성 및 게시판 수 체크를 위한 쿼리 -->
	<select id="select_notice" resultType="noticeVo">
		SELECT * FROM bo_notice
	</select>
	
	<!-- 메뉴 생성을 위한 쿼리 -->
	<select id="select_menu" resultType="noticeVo">
		SELECT * FROM bo_notice where nt_ues = 'Y'
	</select>
	
	<!-- 게시판 생성을 위한 쿼리  -->
	<insert id="insertNotice" parameterType="noticeVo">
		INSERT INTO bo_notice 
		VALUES (nt_sq.nextval, #{userid}, #{nt_name}, #{nt_ues}, sysdate)
	</insert>
	
	<!-- 게시판 업데이트를 위한 쿼리  -->
	<update id="updateNotice" parameterType="noticeVo" >
		UPDATE bo_notice 
		SET 
		 nt_name = #{nt_name} 
		, nt_ues = #{nt_ues}
		where nt_id = #{nt_id}
	</update>
	
	<!-- 해당 게시판에 각 게시글 수 읽어오기 -->
	<select id="getBoardCnt"  resultType="int" parameterType="int">
  		SELECT
    		count(*)
		FROM bo_posts
		where nt_id = #{nt_id}
  	</select>
  	
  	<select id="getBoardCntSet"  resultType="int" >
  		SELECT
    		count(*)
		FROM bo_posts
  	</select>
  	
 
	<select id="selectBoardPageList" parameterType="map" resultType="postsVo">
	    SELECT * FROM
	    (SELECT rownum rnum, a.* FROM 
	     (select  
	         lpad('└▶',(level-1)*3, '　') || po_subject as lp_subject
	        , bo_posts.*
	        , level
	        from bo_posts
	        where nt_id = #{nt_id}
	        start with po_id2 is null
	        connect by prior po_id = po_id2
	        order siblings by po_reply desc)a)
	    where rnum between #{pageVo.page}*#{pageVo.pageSize}-(#{pageVo.pageSize}-1) and #{pageVo.page}*#{pageVo.pageSize}
  	</select>
  	
  	
  	<!-- 해당 게시글 가져오기 -->
  	<select id="selectPosts" parameterType="int" resultType="postsVo">
  		select * from bo_posts
		where po_id = #{po_id}
  	</select>
  	
  	<select id="selectPostsByVo" parameterType="postsVo" resultType="postsVo">
  		select * from bo_posts
		where po_id = #{po_id}
  	</select>
  	
  	<!-- 해당 게시글에 첨부파일 가져오기 -->
  	<select id="selectFile" parameterType="int" resultType="fileVo">
  		select /*+ INDEX (BO_FILE IDX_BO_FILE_01)*/ * from bo_file
		where po_id = #{po_id}
  	</select>
  
  	<!--  게시글 쓰기  -->
  	<insert id="insertPosts" parameterType="postsVo">
  		<selectKey resultType="int" keyProperty="po_id" order="BEFORE" >
  			SELECT	po_sq.nextval from dual
  		</selectKey>
  		INSERT INTO bo_posts
  		(
		    po_id
		    , nt_id
		    , po_subject
		    , po_contents
		    , po_reply
		    , userid
		    , po_date
		)
		VALUES ( #{po_id}, #{nt_id}, #{po_subject}
		    , #{po_contents}, #{po_id}, #{userid}, sysdate
		)
  	</insert>
  	
  	<!-- 게시글 업데이트 -->
  	<update id="updatePosts" parameterType="postsVo">
  		update bo_posts
		set po_subject = #{po_subject}
    	, po_contents = #{po_contents}
		where po_id = #{po_id}
  	</update>
  	
  	<!-- 해당 게시글 삭제 --> 
 	<update id="deletePosts" parameterType="postsVo">
  		update bo_posts
		set po_delete = #{po_delete}
		where po_id = #{po_id}
  	</update>
  	
  	<!--  댓글 리스트  가져오기  -->
  	<select id="selectComment" resultType="commentVo" parameterType="int">
  		select /*+ INDEX (BO_COMMENT IDX_BO_COMMENT_01)*/ * from bo_comment
		where po_id = #{po_id}
		order by co_id asc
  	</select>
  	
  	<!-- 댓글 작성 -->
  	<insert id="insertComment" parameterType="commentVo">
  		INSERT INTO bo_comment
		(
		    co_id
		    , po_id
		    , userid
		    , co_contents
		    , co_date
		)
		VALUES (
		    co_sq.nextval
		    , #{po_id}
		    , #{userid}
		    , #{co_contents}
		    , sysdate
		)
  	</insert>
  	
  	<!-- 댓글 삭제 -->
  	<update id="deleteComment" parameterType="commentVo">
  		update bo_comment
		set co_delete = #{co_delete}
		where co_id = #{co_id}
  	</update>
  	
  	
  	<!-- 답글 글쓰기 -->
  	<insert id="insertReply" parameterType="postsVo">
  		<selectKey resultType="int" keyProperty="po_id" order="BEFORE" >
  			SELECT	po_sq.nextval from dual
  		</selectKey>
  		INSERT INTO bo_posts
		(
		    po_id
		    , po_id2
		    , nt_id
		    , po_subject
		    , po_contents
		    , po_reply
		    , userid
		    , po_date
		)
		VALUES (
		    #{po_id}
		    , #{po_id2}
		    , #{nt_id}
		    , #{po_subject}
		    , #{po_contents}
		    , #{po_reply}
		    , #{userid}
		    , sysdate
		)
  	</insert>
  	
  	<!-- 파일 업로드 -->
  	
  	<insert id="insertFile" parameterType="fileVo">
  		INSERT INTO bo_file
		(
		    fl_id
		    , po_id
		    , fl_file
		  
		)
		VALUES (
		    fl_sq.nextval
		    , #{po_id}
		    , #{fl_file}
		   
		)
  	</insert>
  	
  	<!-- 파일 수정 -->
  	<update id="updateFile" parameterType="fileVo">
  		update bo_file
		set fl_file = #{fl_file}
		where fl_id = #{fl_id}
  	</update>
  	
  	<!--  최신글 뽑기  -->
  	<select id="selectRecent" resultType="postsVo">
  		WHERE nt_id = #{nt_id} 
		and ROWNUM <![CDATA[ <= ]]> 5
		order by #{po_id} desc
  	</select>
  	
  	
</mapper>
